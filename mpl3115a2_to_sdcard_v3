/**************************************************************************/
/*
    This code shows how to log data from MPL3115A2 sensor to an sd card.

    Tested and works great with the Maker Nano (Compatible With Arduino Nano)
    Maker Nano ------> https://my.cytron.io/p-maker-nano-simplifying-arduino-for-projects?ref=zyxHpdx3&search=maker%20nano
    MPL3115A2 I2C Sensor ------> https://my.cytron.io/p-mpl3115a2-i2c-barometric-altitude-temperature-sensor?ref=zyxHpdx3
    
    This code has been modified from its original sources; 
    Adafruit MPL3115A2 library ----> https://github.com/adafruit/Adafruit_MPL3115A2_Library/blob/79f61d1af208028e19b901e6346e35634f8f4938/examples/testmpl3115a2/testmpl3115a2.ino
    other 3rd party ----> https://toptechboy.com/arduino-lesson-21-log-sensor-data-to-an-sd-card/

    @section CREDITS
    ----> author   K.Townsend 
    ----> author   Paul McWhorter (paul.mcwhorter@gmail.com)

    v3.0 - Third release

    TODO; 
    ---> digitalwrite sensor status (sdcard, mpl3115a2)
*/
/**************************************************************************/

#include <SD.h> //Load SD card library
#include<SPI.h> //Load SPI Library
#include <Wire.h>    // imports the wire library for talking over I2C 
#include <Adafruit_MPL3115A2.h>  // import the Pressure Sensor Library We are using Version one of Adafruit API for this sensor

Adafruit_MPL3115A2 mySensor;  // create sensor object called mySensor

float pressure; // Variable for holding pressure reading
float altitude; // Variable for holding altitude reading
float temperature; // Variable for holding temp in C (default)

int chipSelect = 4; //chipSelect pin for the SD card Reader
File mySensorData; //Data object you will write your sensor data to

void setup(){
  Serial.begin(9600); //turn on serial monitor
  while(!Serial);
  Serial.println("MPL3115A2_sensor good");

  if (!mySensor.begin()) {
    Serial.println("Could not find sensor. Check wiring.");
    while(1);
  }
  mySensor.begin();   //initialize pressure sensor mySensor
  
  pinMode(10, OUTPUT); //Must declare 10 an output and reserve it
  SD.begin(4); //Initialize the SD card reader
  
  Serial.println("Initializing SD card...");
  if (!SD.begin(4)) {
    Serial.println("Initialization failed! Things to check:");
    Serial.println("1. is a card inserted?");
    Serial.println("2. is your wiring correct?");
    Serial.println("3. did you change the chipSelect pin to match your shield or module?");
    Serial.println("Note: press reset button on the board and reopen this Serial Monitor after fixing your issue!");
    while (1);
  }
  Serial.println("SD card good");
  

  // use to set sea level pressure for current location
  // this is needed for accurate altitude measurement
  // STD SLP = 1013.26 hPa
  mySensor.setSeaPressure(1013.26);
  }

void loop() { 
  pressure = mySensor.getPressure(); // Read Pressure
  altitude = mySensor.getAltitude(); //Read Altitude
  temperature = mySensor.getTemperature(); //  Read Temperature from MPL3115A2

  // open the file. note that only one file can be open at a time,
  // so you have to close this one before opening another.
  /* Note that if the file does not exist on the card, the command: "mySensorData = SD.open("datalog.txt", FILE_WRITE);"
     will create the file. If the file already exists, this command will append data to the existing file.  */
  mySensorData = SD.open("datalog.txt", FILE_WRITE);
  if (mySensorData) {

  Serial.println("-----------------"); 
  Serial.print("pressure = "); Serial.print(pressure); Serial.println(" hPa");
  Serial.print("altitude = "); Serial.print(altitude); Serial.println(" m");
  Serial.print("height = "); Serial.print(altitude * 3.28084); Serial.println(" ft");
  Serial.print("temperature = "); Serial.print(temperature); Serial.println(" C");
  Serial.print("temperature = "); Serial.print((temperature * 9/5) + 32); Serial.println(" F");
  
  delay(250); //Pause between readings.
  
  
  mySensorData.print(pressure);                        //write pressure data to card
  mySensorData.print("hPa, ");                         //write hPa and a commma
  mySensorData.print(altitude);                        //write altitude data to card
  mySensorData.print("m, ");                           //write m and a commma
  mySensorData.print(altitude * 3.28084);              //write height data to card
  mySensorData.print("ft, ");                          //write ft and a commma
  mySensorData.print(temperature);                     //write tempC data to card
  mySensorData.print("C, ");                           //write C and a commma
  mySensorData.print((temperature * 9/5) + 32);        //write tempF and end the line (println)
  mySensorData.println("F ");                         //write F and a commma
  mySensorData.close();                                //close the file
  }
}
